import {
  Content,
  Header,
  Main,
  OptionButton,
  SideNav,
  ViewSwitcher,
} from "@/components/layout";
import { FrameProvider } from "@/components/layout/frame-provider";
import { generateComponent } from "@/helpers/component";
import { components } from "@/helpers/ui";
import {
  Box,
  Heading as ChakraHeading,
  Text as ChakraText,
  Editable,
  EditableInput,
  EditablePreview,
  Flex,
  SimpleGrid,
  Stack,
} from "@chakra-ui/react";
import { Body, Head, Html } from "@react-email/components";
import NextHead from "next/head";
import { useRef, useState } from "react";
import Frame from "react-frame-component";
import { v4 as uuidV4 } from "uuid";

export default function Home() {
  const [tree, setTree] = useState<
    {
      _uid: string;
      component: string;
    }[]
  >([]);
  // const [tree, setTree] = useState(new Map());
  const [emailTitle, setEmailTitle] = useState("Email title");
  const [view, setView] = useState<"preview" | "source">("preview");

  const handleAddComponentToTree = (component: string) => {
    setTree([...tree, { component, _uid: uuidV4() }]);
  };

  return (
    <>
      <NextHead>
        <title>React Email Builder</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </NextHead>
      <Stack h="100vh" spacing="0" direction="row">
        <SideNav>
          <Flex h="70px" alignItems="center">
            <ChakraHeading size="sm" color="white">
              react email builder
            </ChakraHeading>
          </Flex>
          <Stack as="nav" spacing={4}>
            <SimpleGrid columns={[1, 1, 2, 2]} gap={2}>
              {Object.keys(components).map((c) => (
                <OptionButton
                  key={c}
                  onClick={() =>
                    handleAddComponentToTree(components[c].componentKey)
                  }
                >
                  {components[c].icon}
                  <ChakraText mt={1} fontSize="0.75rem">
                    {components[c].label}
                  </ChakraText>
                </OptionButton>
              ))}
            </SimpleGrid>
          </Stack>
        </SideNav>
        <Main>
          <Header>
            <Editable
              value={emailTitle}
              onChange={(value) => setEmailTitle(value)}
            >
              <EditablePreview
                rounded="0"
                borderStyle="dashed"
                borderBottomWidth="1px"
              />
              <EditableInput />
            </Editable>
            <Box mx="auto">
              <ViewSwitcher activeView={view} onViewSwitch={setView} />
            </Box>
          </Header>
          <Content>
            <Box h="100%" mx="auto">
              <Frame
                style={{
                  width: "100%",
                  height: "100%",
                }}
              >
                <FrameProvider>
                  <Html>
                    <Head>
                      <title>{emailTitle}</title>
                    </Head>
                    <Body
                      style={{
                        backgroundColor: "#ffffff",
                        fontFamily: "HelveticaNeue,Helvetica,Arial,sans-serif",
                      }}
                    >
                      {tree.map((block) => generateComponent(block))}
                    </Body>
                  </Html>
                </FrameProvider>
              </Frame>
            </Box>
          </Content>
        </Main>
      </Stack>
    </>
  );
}
